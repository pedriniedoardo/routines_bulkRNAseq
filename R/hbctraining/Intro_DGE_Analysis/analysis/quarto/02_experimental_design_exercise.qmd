---
title: "exercise design"
html:
    embed-resources: true
editor: visual
---

```{r}
#| echo: false
#| warning: false

library(tidyverse)
library(rafalib)
library(caret)
library(knitr)
```

# Sample data
Create a sample desing matrix
```{r}
metadata <- data.frame(
  sample = paste0("sample", 1:12),
  treatment = rep(c("A", "B", "C"), each = 4),
  sex = rep(c("F", "F", "M", "M"), times = 3),
  replicate = rep(1:4, times = 3)
) %>%
  mutate(across(treatment:replicate,as.factor))

metadata
```
Show the structure of the table
```{r}
str(metadata)
```

# Test

build the model matrix for a simple mode, print and plot the model matrix.
```{r}
#| label: model01
#| fig-width: 4
#| fig-height: 4

X <- model.matrix(~ treatment + sex,data = metadata)
X
imagemat(X)
```
test if the matrix is co-linear
```{r}
dim(X)
qr(X)$rank
```
Notice that If we add also the replicate, the gender and the replicate are colinear
```{r}
#| label: model02
#| fig-width: 4
#| fig-height: 4

X2 <- model.matrix(~ treatment + sex + replicate,data = metadata)
X2
imagemat(X2)
```
Test if the matrix is co-linear
```{r}
dim(X2)
qr(X2)$rank
```
The matrix is clearly colinear form the plot, where coefficient 7 + 6 is equal to coefficient 4
```{r}
# Find the linear combinations
combo_info <- findLinearCombos(X2)

# Print the results
print(combo_info)

X2[,combo_info$linearCombos[[1]]]
```

# Exercise

## test 01
Fill in the RNA isolation column of the metadata table. Since we can only prepare 2 samples at a time and we have 12 samples total, you will need to isolate RNA in 6 batches. In the RNA isolation column, enter one of the following values for each sample: group1, group2, group3, group4, group5, group6. Make sure to fill in the table so as to avoid confounding by batch of RNA isolation.
```{r}
#| label: model03
#| fig-width: 4
#| fig-height: 4

metadata_test01 <- metadata %>%
  mutate(batch = c(1,2,3,4,5,6,1,2,3,4,5,6)) %>%
  # mutate(batch = c(1,1,2,2,3,3,4,4,5,5,6,6)) %>%
  mutate(across(treatment:batch,as.factor))

X3 <- model.matrix(~ treatment + sex + batch,data = metadata_test01)
X3
imagemat(X3)
```
Notice the difference adding a non correct design. We can see that 9 + 7 + 5 is equal to 4
```{r}
#| label: model-wrong
#| fig-width: 4
#| fig-height: 4

metadata_test_wrong <- metadata %>%
  mutate(batch = c(1,1,2,2,3,3,4,4,5,5,6,6)) %>%
  mutate(across(treatment:batch,as.factor))

X_wrong <- model.matrix(~ treatment + sex + batch,data = metadata_test_wrong)
X_wrong
imagemat(X_wrong)

# confirm the rank is lower than the size
dim(X_wrong)
qr(X_wrong)$rank
```

Test if the matrix is co-linear in the correct desing
```{r}
dim(X3)
qr(X3)$rank
```

Check the distribution of the treaments per batch and gender
```{r}
# treatment by batch
metadata_test01 %>%
  group_by(treatment,batch) %>%
  summarise(n = n())

# sex by batch
metadata_test01 %>%
  group_by(sex,batch) %>%
  summarise(n = n())

# sex by treatment
metadata_test01 %>%
  group_by(sex,treatment) %>%
  summarise(n = n())
```

## test 02
BONUS: To perform the RNA isolations more quickly, you devote two researchers to perform the RNA isolations. Create a researcher column and fill in the researchersâ€™ initials for the samples they will prepare: use initials AB or CD.
```{r}
#| label: model4
#| fig-width: 4
#| fig-height: 4

metadata_test02 <- metadata_test01 %>%
  mutate(user = c(1,2,1,2,1,2,2,1,2,1,2,1)) %>%
  mutate(across(treatment:user,as.factor))

X4 <- model.matrix(~ treatment + sex + batch + user,data = metadata_test02)
X4
imagemat(X4)

# test if the matrix is co-linear
dim(X4)
qr(X4)$rank
```


